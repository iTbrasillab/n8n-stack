apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-evo-secret
type: Opaque
stringData:
{{- range $k,$v := .Values.secretEnv }}
  {{ $k }}: "{{ $v }}"
{{- end }}
{{- if not (hasKey .Values.secretEnv "DATABASE_CONNECTION_URI") }}
{{- $ns := (default .Release.Namespace .Values.global.db.namespace) }}
{{- $svc := (printf "%s.%s.svc.cluster.local" .Values.global.db.serviceName $ns) }}
  DATABASE_CONNECTION_URI: {{ printf "postgresql://%s:%s@%s:%d/%s?schema=%s" .Values.global.db.user .Values.global.db.password $svc (int .Values.global.db.port) .Values.global.db.name .Values.global.db.schema | quote }}
{{- end }}

# Build CACHE_REDIS_URI from global.redis
{{- if not (hasKey .Values.secretEnv "CACHE_REDIS_URI") }}
{{- $rns := (default .Release.Namespace .Values.global.redis.namespace) }}
{{- $rsvc := (printf "%s.%s.svc.cluster.local" .Values.global.redis.serviceName $rns) }}
{{- $rport := (int (default 6379 .Values.global.redis.port)) }}
{{- $rdb := (default 0 .Values.global.redis.dbIndex) }}
{{- if .Values.global.redis.auth.enabled }}
  CACHE_REDIS_URI: {{ printf "redis://:%s@%s:%d/%d" .Values.global.redis.auth.password $rsvc $rport $rdb | quote }}
{{- else }}
  CACHE_REDIS_URI: {{ printf "redis://%s:%d/%d" $rsvc $rport $rdb | quote }}
{{- end }}
{{- end }}