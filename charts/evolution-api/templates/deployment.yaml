apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-evo
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: { app: {{ .Release.Name }}-evo }
  template:
    metadata:
      labels: { app: {{ .Release.Name }}-evo }
    spec:
      containers:
        - name: evolution-api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef: { name: {{ .Release.Name }}-evo-config }
            - secretRef:    { name: {{ .Release.Name }}-evo-secret }
          ports: [{ name: http, containerPort: 8080 }]
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /data
          {{- end }}
          readinessProbe:
            httpGet: { path: /health, port: http }
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /health, port: http }
            initialDelaySeconds: 20
            periodSeconds: 20
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim: { claimName: {{ .Release.Name }}-evo }
      {{- end }}
