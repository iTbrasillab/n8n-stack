apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
spec:
  serviceName: {{ .Release.Name }}-postgresql
  selector: { matchLabels: { app: {{ .Release.Name }}-postgresql } }
  replicas: 1
  template:
    metadata: { labels: { app: {{ .Release.Name }}-postgresql } }
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          envFrom:
            - secretRef: { name: {{ .Release.Name }}-postgresql-auth }
          ports:
            - name: pg
              containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: data
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
          readinessProbe:
            exec: { command: ["sh","-c","pg_isready -U $POSTGRES_USER"] }
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgresql
        - name: initdb
          configMap:
            name: {{ .Release.Name }}-postgresql-initdb
